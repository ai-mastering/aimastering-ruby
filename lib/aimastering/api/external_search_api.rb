=begin
#AI Mastering API

#This is a AI Mastering API document. You can use the mastering feature of [AI Mastering](https://aimastering.com) through this API.

OpenAPI spec version: 1.0.0
Contact: info@bakuage.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module Aimastering
  class ExternalSearchApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Search external music and get name, url, thumbnails, etc.
    # 
    # @param query Search query
    # @param country Country ex. US, JP, etc
    # @param [Hash] opts the optional parameters
    # @return [ExternalSearchResult]
    def search_external(query, country, opts = {})
      data, _status_code, _headers = search_external_with_http_info(query, country, opts)
      return data
    end

    # Search external music and get name, url, thumbnails, etc.
    # 
    # @param query Search query
    # @param country Country ex. US, JP, etc
    # @param [Hash] opts the optional parameters
    # @return [Array<(ExternalSearchResult, Fixnum, Hash)>] ExternalSearchResult data, response status code and response headers
    def search_external_with_http_info(query, country, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExternalSearchApi.search_external ..."
      end
      # verify the required parameter 'query' is set
      if @api_client.config.client_side_validation && query.nil?
        fail ArgumentError, "Missing the required parameter 'query' when calling ExternalSearchApi.search_external"
      end
      # verify the required parameter 'country' is set
      if @api_client.config.client_side_validation && country.nil?
        fail ArgumentError, "Missing the required parameter 'country' when calling ExternalSearchApi.search_external"
      end
      # resource path
      local_var_path = "/external_search"

      # query parameters
      query_params = {}
      query_params[:'query'] = query
      query_params[:'country'] = country

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['bearer']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalSearchResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExternalSearchApi#search_external\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
